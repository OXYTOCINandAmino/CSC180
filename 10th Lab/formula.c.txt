int genFormula(atom *pAtom,int **output,int *size);
int genAtom(atom *pAtom, int *L);
int genBonds(bondNode *pList, int *L);


int genFormula(atom *pAtom,int **output,int *size){
    int L[300];
    int i;
    int x=0;
    int y=0;

    for(i=0;i<300;i++){
    L[i]=0;}
    
    genAtom(pAtom, L);

    for(i=0;i<300;i++){
      if(L[i]!=0){
        x=x+1;}}
    
    *size=2*x;
    *output=(int*)malloc(2x*sizeof(int));

    for(i=0;i<300;i++){
      if(L[i]!=0){
        *output[y]=i;
        *output[y+1]=L[i];
        y=y+2;}}

    return **output;}
    
    
      


    
int genAtom(atom *pAtom, int *L) {
    int n;
    if (pAtom == NULL) { return -1;}
    else{
        int n= pAtom->atomicNumber;
        L[n]=L[n]+1;
        genBonds(pAtom->bondList, L);}
    return 0;}

int genBonds(bondNode *pList, int *L){
   if (pList == NULL) { return -1;}
   else {
      genAtom(pList->pAtom, L);
      genBonds(pList->pNext, L);
   
